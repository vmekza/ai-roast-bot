{"ast":null,"code":"var _jsxFileName = \"/Users/scarlet/TAMK/GIT/ai-roast-bot/frontend/src/components/RoastBot.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { getRoast } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoastBot = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isRoastMode, setIsRoastMode] = useState(false);\n  const [voiceMode, setVoiceMode] = useState(false);\n  const chatRef = useRef(null);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // AI Speaks if voice mode is ON\n  const speakResponse = text => {\n    if (!text || !voiceMode) return;\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = 'en-US';\n    speech.rate = 1.1;\n    speech.pitch = 1;\n    speech.volume = 1;\n    window.speechSynthesis.speak(speech);\n  };\n\n  // Speech-to-Text (user voice input)\n  const handleVoiceInput = () => {\n    const recognition = new window.webkitSpeechRecognition() || new window.SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript);\n    };\n    recognition.onerror = event => {\n      console.error('Speech Recognition Error:', event.error);\n    };\n  };\n  const sendMessage = async message => {\n    if (!message.trim()) return;\n    setLoading(true);\n\n    // ðŸŽ­ Mode switching\n    const systemPrompt = isRoastMode ? `You are an AI comedian who ONLY gives funny and sarcastic roasts.\n         You MUST NEVER answer questions or provide helpful information.\n         Every response must be an insult, but it should be lighthearted and playful.` : `You are a professional AI assistant.\n         Your job is to help users with clear, useful, and polite answers.\n         YOU MUST NEVER roast or insult the user in any way.\n         Do not make jokes unless asked.`;\n    const response = await getRoast(message, systemPrompt);\n    setMessages([...messages, {\n      text: message,\n      sender: 'user'\n    }, {\n      text: response,\n      sender: 'ai'\n    }]);\n    setUserInput('');\n    if (voiceMode) speakResponse(response);\n    setLoading(false);\n  };\n\n  // Reset chat when changing modes\n  const toggleRoastMode = () => {\n    setIsRoastMode(!isRoastMode);\n    setMessages([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col max-w-lg mx-auto bg-gray-900 text-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center mb-4\",\n      children: \"AI RoastBot & Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"flex items-center cursor-pointer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"hidden\",\n          checked: isRoastMode,\n          onChange: toggleRoastMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: isRoastMode ? 'ðŸ”¥ Roast Mode' : 'ðŸ¤– Normal Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"flex items-center cursor-pointer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"hidden\",\n          checked: voiceMode,\n          onChange: () => setVoiceMode(!voiceMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: voiceMode ? 'ðŸ”Š Voice ON' : 'ðŸ”‡ Voice OFF'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-80 overflow-y-auto border border-gray-700 p-3 rounded-lg mb-4\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `p-3 my-1 rounded-lg max-w-xs text-white ${msg.sender === 'user' ? 'bg-blue-500' : 'bg-gray-700'}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border border-gray-600 rounded bg-gray-800 text-white\",\n      placeholder: \"Type your message...\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex-1 bg-green-500 text-white p-2 rounded\",\n        onClick: () => sendMessage(userInput),\n        disabled: loading || !userInput.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex-1 bg-purple-500 text-white p-2 rounded\",\n        onClick: handleVoiceInput,\n        children: \"\\uD83C\\uDFA4 Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(RoastBot, \"ctVhF0OukHYhLOO2RgUoXjk7IqQ=\");\n_c = RoastBot;\nexport default RoastBot;\nvar _c;\n$RefreshReg$(_c, \"RoastBot\");","map":{"version":3,"names":["useState","useRef","useEffect","getRoast","jsxDEV","_jsxDEV","RoastBot","_s","userInput","setUserInput","messages","setMessages","loading","setLoading","isRoastMode","setIsRoastMode","voiceMode","setVoiceMode","chatRef","_chatRef$current","current","scrollIntoView","behavior","speakResponse","text","speech","SpeechSynthesisUtterance","lang","rate","pitch","volume","window","speechSynthesis","speak","handleVoiceInput","recognition","webkitSpeechRecognition","SpeechRecognition","start","onresult","event","transcript","results","onerror","console","error","sendMessage","message","trim","systemPrompt","response","sender","toggleRoastMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","msg","index","ref","placeholder","value","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/scarlet/TAMK/GIT/ai-roast-bot/frontend/src/components/RoastBot.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { getRoast } from '../api';\n\nconst RoastBot = () => {\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isRoastMode, setIsRoastMode] = useState(false);\n  const [voiceMode, setVoiceMode] = useState(false);\n  const chatRef = useRef(null);\n\n  useEffect(() => {\n    chatRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // AI Speaks if voice mode is ON\n  const speakResponse = (text) => {\n    if (!text || !voiceMode) return;\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = 'en-US';\n    speech.rate = 1.1;\n    speech.pitch = 1;\n    speech.volume = 1;\n    window.speechSynthesis.speak(speech);\n  };\n\n  // Speech-to-Text (user voice input)\n  const handleVoiceInput = () => {\n    const recognition =\n      new window.webkitSpeechRecognition() || new window.SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript);\n    };\n\n    recognition.onerror = (event) => {\n      console.error('Speech Recognition Error:', event.error);\n    };\n  };\n\n  const sendMessage = async (message) => {\n    if (!message.trim()) return;\n    setLoading(true);\n\n    // ðŸŽ­ Mode switching\n    const systemPrompt = isRoastMode\n      ? `You are an AI comedian who ONLY gives funny and sarcastic roasts.\n         You MUST NEVER answer questions or provide helpful information.\n         Every response must be an insult, but it should be lighthearted and playful.`\n      : `You are a professional AI assistant.\n         Your job is to help users with clear, useful, and polite answers.\n         YOU MUST NEVER roast or insult the user in any way.\n         Do not make jokes unless asked.`;\n\n    const response = await getRoast(message, systemPrompt);\n\n    setMessages([\n      ...messages,\n      { text: message, sender: 'user' },\n      { text: response, sender: 'ai' },\n    ]);\n    setUserInput('');\n\n    if (voiceMode) speakResponse(response);\n    setLoading(false);\n  };\n\n  // Reset chat when changing modes\n  const toggleRoastMode = () => {\n    setIsRoastMode(!isRoastMode);\n    setMessages([]);\n  };\n\n  return (\n    <div className='flex flex-col max-w-lg mx-auto bg-gray-900 text-white p-6 rounded-lg shadow-md'>\n      <h1 className='text-2xl font-bold text-center mb-4'>\n        AI RoastBot & Assistant\n      </h1>\n      <div className='flex justify-between items-center mb-4'>\n        <label className='flex items-center cursor-pointer'>\n          <input\n            type='checkbox'\n            className='hidden'\n            checked={isRoastMode}\n            onChange={toggleRoastMode}\n          />\n          <span className='ml-2'>\n            {isRoastMode ? 'ðŸ”¥ Roast Mode' : 'ðŸ¤– Normal Mode'}\n          </span>\n        </label>\n      </div>\n      <div className='flex justify-between items-center mb-4'>\n        <label className='flex items-center cursor-pointer'>\n          <input\n            type='checkbox'\n            className='hidden'\n            checked={voiceMode}\n            onChange={() => setVoiceMode(!voiceMode)}\n          />\n          <span className='ml-2'>\n            {voiceMode ? 'ðŸ”Š Voice ON' : 'ðŸ”‡ Voice OFF'}\n          </span>\n        </label>\n      </div>\n      <div className='h-80 overflow-y-auto border border-gray-700 p-3 rounded-lg mb-4'>\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`flex ${\n              msg.sender === 'user' ? 'justify-end' : 'justify-start'\n            }`}\n          >\n            <p\n              className={`p-3 my-1 rounded-lg max-w-xs text-white ${\n                msg.sender === 'user' ? 'bg-blue-500' : 'bg-gray-700'\n              }`}\n            >\n              {msg.text}\n            </p>\n          </div>\n        ))}\n        <div ref={chatRef}></div>\n      </div>\n      <textarea\n        className='w-full p-2 border border-gray-600 rounded bg-gray-800 text-white'\n        placeholder='Type your message...'\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n      ></textarea>\n      <div className='flex gap-2 mt-3'>\n        <button\n          className='flex-1 bg-green-500 text-white p-2 rounded'\n          onClick={() => sendMessage(userInput)}\n          disabled={loading || !userInput.trim()}\n        >\n          Send\n        </button>\n        <button\n          className='flex-1 bg-purple-500 text-white p-2 rounded'\n          onClick={handleVoiceInput}\n        >\n          ðŸŽ¤ Speak\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RoastBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}